<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [E:\work\codes\zs303a_0308_single\application\bt_earphone\src\att\att_patterns\group1\bqb_test\cuckoo\p03_bqb.elf]</title></head>
<body><HR>
<H1>Static Call Graph for image E:\work\codes\zs303a_0308_single\application\bt_earphone\src\att\att_patterns\group1\bqb_test\cuckoo\p03_bqb.elf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Wed Jun 28 09:49:02 2023
<BR><P>
<H3>Maximum Stack Usage =        460 bytes</H3><H3>
Call chain for Maximum Stack Depth:</H3>
pattern_main &rArr; act_test_enter_BQB_mode &rArr; att_buf_printf &rArr; att_printf &rArr; att_vsnprintf
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[0]"></a>pattern_main</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, ap_autotest_misc_test.o(.entry))
<BR><BR>[Stack]<UL><LI>Max Depth = 460<LI>Call Chain = pattern_main &rArr; act_test_enter_BQB_mode &rArr; att_buf_printf &rArr; att_printf &rArr; att_vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;act_test_enter_BQB_mode
</UL>

<P><STRONG><a name="[3]"></a>act_log_to_pc</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, ap_autotest_common.o(.text.act_log_to_pc))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = act_log_to_pc &rArr; stub_write_packet
</UL>
<BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stub_write_packet
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;att_buf_printf
</UL>

<P><STRONG><a name="[2]"></a>act_test_enter_BQB_mode</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, ap_autotest_misc_test.o(.text.act_test_enter_BQB_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 452<LI>Call Chain = act_test_enter_BQB_mode &rArr; att_buf_printf &rArr; att_printf &rArr; att_vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;att_buf_printf
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;act_test_normal_report
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;act_test_modify_bt_bqb_flag
</UL>
<BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pattern_main
</UL>

<P><STRONG><a name="[7]"></a>act_test_modify_bt_bqb_flag</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, ap_autotest_misc_test.o(.text.act_test_modify_bt_bqb_flag))
<BR><BR>[Stack]<UL><LI>Max Depth = 244<LI>Call Chain = act_test_modify_bt_bqb_flag &rArr; att_printf &rArr; att_vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;att_printf
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;act_test_set_bt_bqbflag
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;act_test_enter_BQB_mode
</UL>

<P><STRONG><a name="[6]"></a>act_test_normal_report</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, ap_autotest_common.o(.text.act_test_normal_report))
<BR><BR>[Stack]<UL><LI>Max Depth = 260<LI>Call Chain = act_test_normal_report &rArr; att_printf &rArr; att_vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stub_write_packet
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;att_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;act_test_enter_BQB_mode
</UL>

<P><STRONG><a name="[8]"></a>act_test_set_bt_bqbflag</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, ap_autotest_common.o(.text.act_test_set_bt_bqbflag))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = act_test_set_bt_bqbflag
</UL>
<BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;property_set
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;act_test_modify_bt_bqb_flag
</UL>

<P><STRONG><a name="[5]"></a>att_buf_printf</STRONG> (Thumb, 412 bytes, Stack size 208 bytes, ap_autotest_print.o(.text.att_buf_printf))
<BR><BR>[Stack]<UL><LI>Max Depth = 444<LI>Call Chain = att_buf_printf &rArr; att_printf &rArr; att_vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;k_uptime_get
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;act_log_to_pc
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;att_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;act_test_enter_BQB_mode
</UL>

<P><STRONG><a name="[9]"></a>att_printf</STRONG> (Thumb, 54 bytes, Stack size 168 bytes, ap_autotest_extern_function.o(.text.att_printf))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = att_printf &rArr; att_vsnprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_puts
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;att_vsnprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;att_buf_printf
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;act_test_normal_report
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;act_test_modify_bt_bqb_flag
</UL>

<P><STRONG><a name="[c]"></a>att_vsnprintf</STRONG> (Thumb, 584 bytes, Stack size 68 bytes, ap_autotest_extern_function.o(.text.att_vsnprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = att_vsnprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;att_printf
</UL>

<P><STRONG><a name="[11]"></a>clk_enable</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, soc_clock.o(.text.clk_enable))
<BR><BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
</UL>

<P><STRONG><a name="[b]"></a>k_uptime_get</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ap_autotest_extern_function.o(.text.k_uptime_get))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;att_buf_printf
</UL>

<P><STRONG><a name="[1]"></a>memset</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, string.o(.text.memset))
<BR><BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pattern_main
</UL>

<P><STRONG><a name="[a]"></a>property_set</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ap_autotest_extern_function.o(.text.property_set))
<BR><BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;act_test_set_bt_bqbflag
</UL>

<P><STRONG><a name="[e]"></a>reset_and_enable</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, soc_reset.o(.text.reset_and_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = reset_and_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;udelay
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
</UL>

<P><STRONG><a name="[4]"></a>stub_write_packet</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, ap_autotest_extern_function.o(.text.stub_write_packet))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = stub_write_packet
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;act_log_to_pc
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;act_test_normal_report
</UL>

<P><STRONG><a name="[10]"></a>uart_init</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, soc_uart.o(.text.uart_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = uart_init &rArr; reset_and_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_and_enable
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clk_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_puts
</UL>

<P><STRONG><a name="[d]"></a>uart_puts</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, soc_uart.o(.text.uart_puts))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = uart_puts &rArr; uart_init &rArr; reset_and_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;att_printf
</UL>

<P><STRONG><a name="[f]"></a>udelay</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ap_autotest_extern_function.o(.text.udelay))
<BR><BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_and_enable
</UL>
<P>
<H3>
Local Symbols
</H3><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
